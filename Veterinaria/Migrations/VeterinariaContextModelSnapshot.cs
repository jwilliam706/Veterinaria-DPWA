// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Veterinaria.Models;

#nullable disable

namespace Veterinaria.Migrations
{
    [DbContext(typeof(VeterinariaContext))]
    partial class VeterinariaContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Veterinaria.Models.Cita", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Estado")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("estado");

                    b.Property<DateTime?>("Fecha")
                        .HasColumnType("datetime")
                        .HasColumnName("fecha");

                    b.Property<TimeSpan>("Hora")
                        .HasColumnType("time");

                    b.Property<int?>("MascotaId")
                        .HasColumnType("int")
                        .HasColumnName("mascota_id");

                    b.Property<int?>("VeterinarioId")
                        .HasColumnType("int")
                        .HasColumnName("veterinario_id");

                    b.HasKey("Id")
                        .HasName("PK__citas__3213E83F3DDEA8CE");

                    b.HasIndex("MascotaId");

                    b.HasIndex("VeterinarioId");

                    b.ToTable("citas", (string)null);
                });

            modelBuilder.Entity("Veterinaria.Models.Cliente", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Direccion")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)")
                        .HasColumnName("direccion");

                    b.Property<string>("Nombre")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)")
                        .HasColumnName("nombre");

                    b.Property<string>("Sexo")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("sexo");

                    b.Property<string>("Telefono")
                        .HasMaxLength(9)
                        .IsUnicode(false)
                        .HasColumnType("varchar(9)")
                        .HasColumnName("telefono");

                    b.HasKey("Id")
                        .HasName("PK__clientes__3213E83F6F7331C7");

                    b.ToTable("clientes", (string)null);
                });

            modelBuilder.Entity("Veterinaria.Models.Expediente", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("CitaId")
                        .HasColumnType("int")
                        .HasColumnName("cita_id");

                    b.Property<string>("Diagnostico")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)")
                        .HasColumnName("diagnostico");

                    b.Property<int?>("MascotaId")
                        .HasColumnType("int")
                        .HasColumnName("mascota_id");

                    b.Property<string>("Recetas")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)")
                        .HasColumnName("recetas");

                    b.HasKey("Id")
                        .HasName("PK__expedien__3213E83F349C854B");

                    b.HasIndex("CitaId");

                    b.HasIndex("MascotaId");

                    b.ToTable("expediente", (string)null);
                });

            modelBuilder.Entity("Veterinaria.Models.Mascota", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("ClienteId")
                        .HasColumnType("int")
                        .HasColumnName("cliente_id");

                    b.Property<DateTime?>("FechaNacimiento")
                        .HasColumnType("date")
                        .HasColumnName("fecha_nacimiento");

                    b.Property<string>("Nombre")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("nombre");

                    b.Property<string>("Sexo")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("sexo");

                    b.Property<string>("Tipo")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("tipo");

                    b.HasKey("Id")
                        .HasName("PK__mascotas__3213E83F6AA4138E");

                    b.HasIndex("ClienteId");

                    b.ToTable("mascotas", (string)null);
                });

            modelBuilder.Entity("Veterinaria.Models.Usuario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Password")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("password");

                    b.Property<string>("Role")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("role");

                    b.Property<string>("Usuario1")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("usuario");

                    b.HasKey("Id")
                        .HasName("PK__usuarios__3213E83FAA08AA7C");

                    b.ToTable("usuarios", (string)null);
                });

            modelBuilder.Entity("Veterinaria.Models.Veterinario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Direccion")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)")
                        .HasColumnName("direccion");

                    b.Property<string>("Nombre")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)")
                        .HasColumnName("nombre");

                    b.Property<string>("Sexo")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("sexo");

                    b.Property<string>("Telefono")
                        .HasMaxLength(9)
                        .IsUnicode(false)
                        .HasColumnType("varchar(9)")
                        .HasColumnName("telefono");

                    b.HasKey("Id")
                        .HasName("PK__veterina__3213E83F7E60B2F3");

                    b.ToTable("veterinarios", (string)null);
                });

            modelBuilder.Entity("Veterinaria.Models.Cita", b =>
                {
                    b.HasOne("Veterinaria.Models.Mascota", "Mascota")
                        .WithMany("Cita")
                        .HasForeignKey("MascotaId")
                        .HasConstraintName("fk_citas_mascota");

                    b.HasOne("Veterinaria.Models.Veterinario", "Veterinario")
                        .WithMany("Cita")
                        .HasForeignKey("VeterinarioId")
                        .HasConstraintName("fk_citas_veterinario");

                    b.Navigation("Mascota");

                    b.Navigation("Veterinario");
                });

            modelBuilder.Entity("Veterinaria.Models.Expediente", b =>
                {
                    b.HasOne("Veterinaria.Models.Cita", "Cita")
                        .WithMany("Expedientes")
                        .HasForeignKey("CitaId")
                        .HasConstraintName("fk_exp_cita");

                    b.HasOne("Veterinaria.Models.Mascota", "Mascota")
                        .WithMany("Expedientes")
                        .HasForeignKey("MascotaId")
                        .HasConstraintName("fk_exp_mascota");

                    b.Navigation("Cita");

                    b.Navigation("Mascota");
                });

            modelBuilder.Entity("Veterinaria.Models.Mascota", b =>
                {
                    b.HasOne("Veterinaria.Models.Cliente", "Cliente")
                        .WithMany("Mascota")
                        .HasForeignKey("ClienteId")
                        .HasConstraintName("pk_cliente_mascota");

                    b.Navigation("Cliente");
                });

            modelBuilder.Entity("Veterinaria.Models.Cita", b =>
                {
                    b.Navigation("Expedientes");
                });

            modelBuilder.Entity("Veterinaria.Models.Cliente", b =>
                {
                    b.Navigation("Mascota");
                });

            modelBuilder.Entity("Veterinaria.Models.Mascota", b =>
                {
                    b.Navigation("Cita");

                    b.Navigation("Expedientes");
                });

            modelBuilder.Entity("Veterinaria.Models.Veterinario", b =>
                {
                    b.Navigation("Cita");
                });
#pragma warning restore 612, 618
        }
    }
}
